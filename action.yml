name: "datawise-build-generic-docker"
description: "datawise build and push generic container"
inputs:
  PROJECT:
    required: true
  APP:
    required: true
  SERVICE:
    required: true
  INSTANCE:
    required: true
  VERSION:
    required: true
  DOCKER_REPOSITORY_BASE:
    required: true
    default: "docker.datawise.ai"
  DOCKER_USER:
    required: true
    default: "builder"
  DOCKER_PASS:
    required: true
  QEMU_SETUP:
    required: false
    default: "true"
outputs:
  images:
    description: "tagged images"
    value: "${{ steps.set_outputs.outputs.IMAGES }}"
runs:
  using: "composite"
  steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      if: ${{ inputs.QEMU_SETUP == 'true' }}

    - name: setup docker context for buildx
      id: buildx-context
      shell: bash
      run: |
        docker context create builders || true
      if: ${{ inputs.QEMU_SETUP == 'true' }}


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        endpoint: builders

    - name: Login to Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}
        username: builder
        password: ${{ inputs.DOCKER_PASS }}


    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}/${{ inputs.APP }}-${{ inputs.SERVICE }}-${{ inputs.INSTANCE }}
        flavor: |
          latest=true
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=tag
          type=raw,value=${{ inputs.VERSION }}
          type=semver,pattern={{version}}
          type=sha

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from:
          ${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}/${{ inputs.APP }}-${{ inputs.SERVICE }}-${{ inputs.INSTANCE }}:latest

    - name: set output
      id: set_outputs
      shell: bash
      run: |
        IMAGES="${{ steps.meta.outputs.tags }}"
        IMAGES="${IMAGES//$'\n'/' '}"
        IMAGES="${IMAGES//$'\r'/''}"
        echo "::set-output name=IMAGES::$IMAGES"

    - name: print tags
      shell: bash
      run: |
        echo ${{ steps.set_outputs.outputs.IMAGES }}
        docker history ${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}/${{ inputs.APP }}-${{ inputs.SERVICE }}-${{ inputs.INSTANCE }}:${{ inputs.INSTANCE }}




    # - name: Build and push container
    #   uses: docker/build-push-action@v3
    #   with:
    #     context: .
    #     push: true
    #     tags: |
    #       ${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}/${{ inputs.APP }}-${{ inputs.SERVICE }}-${{ inputs.INSTANCE }}:${{ inputs.VERSION }}
    #       ${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}/${{ inputs.APP }}-${{ inputs.SERVICE }}-${{ inputs.INSTANCE }}:latest
    #     cache-from:
    #       ${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}/${{ inputs.APP }}-${{ inputs.SERVICE }}-${{ inputs.INSTANCE }}:latest
